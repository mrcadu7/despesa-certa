name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      run: |
        mkdir -p $HOME/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > $HOME/.ssh/id_rsa
        chmod 600 $HOME/.ssh/id_rsa
        chmod 700 $HOME/.ssh
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> $HOME/.ssh/known_hosts
        
    - name: Test SSH Connection
      run: |
        ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful'"
        
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Navegar para o diret√≥rio do projeto
          cd /home/ubuntu/despesa-certa
          
          # Verificar IP antes do deploy
          echo "üîç Verificando mudan√ßas de IP..."
          chmod +x check-ip.sh
          ./check-ip.sh || echo "IP pode ter mudado - deploy ir√° resolver"
          
          # Pull das mudan√ßas
          git fetch origin
          git reset --hard origin/main
          
          # Dar permiss√£o de execu√ß√£o para o script
          chmod +x deploy-aws-optimized.sh
          
          # Executar o deploy (detecta IP automaticamente)
          ./deploy-aws-optimized.sh
        EOF
        
    - name: Verify deployment
      run: |
        # Aguardar alguns segundos para os containers subirem
        sleep 30
        
        # Testar se a aplica√ß√£o est√° rodando
        ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "üß™ Testando conectividade..."
          
          # Obter IP p√∫blico
          PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
          
          # Teste Backend
          if curl -s -f http://localhost:8000/api/ > /dev/null; then
            echo "‚úÖ Backend est√° respondendo"
          else
            echo "‚ùå Backend n√£o est√° respondendo"
            exit 1
          fi
          
          # Teste Frontend
          if curl -s -f http://localhost:3000 > /dev/null; then
            echo "‚úÖ Frontend est√° respondendo"
          else
            echo "‚ùå Frontend n√£o est√° respondendo"
            exit 1
          fi
          
          echo "üéâ Deploy verificado com sucesso!"
          echo "Frontend: http://$PUBLIC_IP:3000"
          echo "Backend: http://$PUBLIC_IP:8000/api/"
        EOF
        
    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ Deploy realizado com sucesso!"
        echo "A aplica√ß√£o est√° rodando em produ√ß√£o."
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Deploy falhou!"
        echo "Verifique os logs para mais detalhes."
